设计一个算法，找出数组中最小的k个数。以任意顺序返回这k个数均可。

示例：

输入： arr = [1,3,5,7,2,4,6,8], k = 4
输出： [1,2,3,4]


思路：设大根堆，保存k个数，若q.size() >k则出堆，使得堆中大小一直为k，最终堆中为最小k元素，
因为大元素都出堆了

class Solution {
public:
    vector<int> smallestK(vector<int>& arr, int k) {
        vector<int> vec(k, 0);
        if (k == 0) { // 排除 0 的情况
            return vec;
        }
        priority_queue<int> Q;//大根堆
        for (int i = 0; i < k; ++i) {
            Q.push(arr[i]);
        }
        for (int i = k; i < (int)arr.size(); ++i) {
         Q.push(arr[i]);
         if(Q.size() >k){
             Q.pop();
         }
                
            
        }
        for (int i = k-1; i >=0; --i) {
            vec[i] = Q.top();
            Q.pop();
        }
        return vec;
    }
};