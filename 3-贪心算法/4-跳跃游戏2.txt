输入: [2,3,1,1,4]
输出: 2
解释: 跳到最后一个位置的最小跳跃数是 2。
     从下标为 0 跳到下标为 1 的位置，跳 1 步，然后跳 3 步到达数组的最后一个位置。




class Solution {
public:
    int jump(vector<int>& nums) {
        int maxPos = 0, n = nums.size(), end = 0, step = 0;
        for (int i = 0; i < n - 1; ++i) {//遍历
            if (maxPos >= i) {
                maxPos = max(maxPos, i + nums[i]);//更新最大范围
                if (i == end) {//若i到达边界
                    end = maxPos;//更新边界，且步数加1
                    ++step;
                }
            }
        }
        return step;
    }
};

