

[i,j]

class Solution {
public:
    static bool cmp(const vector<int> a, const vector<int> b) {
        if (a[0] == b[0]) return a[1] < b[1];//若相等，则按照第二列排序
        return a[0] > b[0];//降序
    }
    vector<vector<int>> reconstructQueue(vector<vector<int>>& people) {
        sort (people.begin(), people.end(), cmp);//根据cmp函数排序
        vector<vector<int>> que;//二维数组
        for (int i = 0; i < people.size(); i++) {
            int position = people[i][1];//求j
            que.insert(que.begin() + position, people[i]);//根据j次序，插入que数组中
        }
        return que;
    }
};
