给定一个二叉树，返回其节点值的锯齿形层序遍历。（即先从左往右，再从右往左进行下一层遍历，以此类推，层与层之间交替进行）。

例如：
给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回锯齿形层序遍历如下：

[
  [3],
  [20,9],
  [15,7]
]

思路1：bfs    queue 存放节点   deque存放数据

class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root == NULL) return res;
        bool light = true;
        
        queue<TreeNode*> q;
        
        q.push(root);
        while(!q.empty()){
            int size = q.size();
            deque<int> de;
            for(int i = 0;i<size;++i){

            auto node = q.front();
             q.pop();
            if(light){
                
                de.push_back(node->val);
               
            }else{
                de.push_front(node->val);
                
            }
            if(node->left != NULL){q.push(node->left);}
            if(node->right != NULL){q.push(node->right);}
            }
            light = !light;
            res.push_back(vector<int>(de.begin(),de.end()));
        }
        return res;
    }
};