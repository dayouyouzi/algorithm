
请实现一个函数，输入一个整数（以二进制串形式），输出该数二进制表示中 1 的个数。例如，把 9 表示成二进制是 1001，有 2 位是 1。因此，如果输入 9，则该函数输出 2。

 

示例 1：

输入：00000000000000000000000000001011
输出：3
解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。


思路1：右移

class Solution {
public:
    int hammingWeight(uint32_t n) {
        int count = 0;
        while(n ){
            if(n & 1){//判断末尾位是否为1，是，则count++
                count++;
            }
            n = n >> 1;//右移一位，直到n= 0，跳出while
        }
    return count;
    }
};

思路2：n&(n-1)     去掉最后出现1的位
示例1: 7 & 6
00111
      &   =》 00110
00110

示例2: 8 & 7
01000
      &   =》 00000
00111


int hammingWeight(uint32_t n) {
      int count = 0;
        while(n)
      {
          n = n & (n - 1);
             count++;
       }
       return count;
   }
};

